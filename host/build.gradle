apply plugin: 'com.android.application'

def buildTime() {
    return new Date().format("yyyy-MM-dd-HH-mm-ss", TimeZone.getTimeZone("GMT+8"));
}

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        incremental = false
    }
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {

        applicationId "com.freeme.camera"
        minSdkVersion 21
        targetSdkVersion 24
        versionCode 60030
        versionName "1.1.60030"
        testApplicationId "com.freeme.camera.tests"
        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner 'android.test.InstrumentationTestRunner'
    }/*
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            def fileName
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                if (variant.buildType.name.equals('release')) {
                    //Ex. Camera_v1.1.60030.apk
                    fileName = "Camera_v${defaultConfig.versionName}.apk"
                } else if (variant.buildType.name.equals('debug')) {
                    //Ex. Camera_v1.1.60030_2016-08-29-17-39-49_debug.apk
                    fileName = "Camera_v${defaultConfig.versionName}_${buildTime()}_debug.apk"
                }
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }*/
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    aaptOptions {
        additionalParameters "--no-version-vectors"
    }
    lintOptions {
        abortOnError false
    }
    gradle.taskGraph.whenReady {
        tasks.each { task ->
            if (task.name.equals('mockableAndroidJar')) {
                task.enabled = false
            }
        }
    }
    sourceSets {
        main {
            manifest.srcFile "AndroidManifest.xml"
            res.srcDirs = ["res",
                           "../feature/setting/cameraswitcher/res",
                           "../feature/setting/continuousshot/res",
                           "../feature/setting/hdr/res",
                           "../feature/setting/flash/res",
                           "../feature/setting/focus/res",
                           "../feature/setting/exposure/res",
                           "../feature/setting/zoom/res",
                           "../feature/setting/dualcamerazoom/res",
                           "../feature/setting/dng/res",
                           "../feature/setting/selftimer/res",
                           "../feature/setting/facedetection/res",
                           "../feature/setting/matrixdisplay/res",
                           "../feature/setting/picturesize/res",
                           "../feature/setting/scenemode/res",
                           "../feature/setting/whitebalance/res",
                           "../feature/setting/imageproperties/res",
                           "../feature/setting/antiflicker/res",
                           "../feature/setting/focusmode/res",
                           "../feature/setting/microphone/res",
                           "../feature/setting/noisereduction/res",
                           "../feature/setting/eis/res",
                           "../feature/setting/ais/res",
                           "../feature/setting/zsd/res",
                           "../feature/setting/volumecapture/res",
                           "../feature/setting/mirrorcapture/res",
                           "../feature/setting/touchcapture/res",
                           "../feature/setting/shuttersound/res",
                           "../feature/setting/gridline/res",
                           "../feature/setting/iso/res",
                           "../feature/setting/videoquality/res",
                           "../feature/setting/aaaroidebug/res",
                           "../feature/setting/shutterspeed/res",
                           "../feature/mode/slr/res",
                           "../feature/mode/iko/res",
                           "../feature/mode/panorama/res",
                           "../feature/mode/extriorplug/res",
                           "../feature/setting/focussound/res",
                           "../feature/setting/autoexit/res",
                           "../feature/setting/restoresettings/res",
                           "../feature/setting/aboutcamera/res"]
            assets.srcDirs =["assets"]
            java.srcDirs = ["src",
                            "../feature/setting/cameraswitcher/src",
                            "../feature/setting/continuousshot/src",
                            "../feature/setting/hdr/src",
                            "../feature/setting/flash/src",
                            "../feature/setting/focus/src",
                            "../feature/setting/exposure/src",
                            "../feature/setting/zoom/src",
                            "../feature/setting/dualcamerazoom/src",
                            "../feature/setting/superdenoise/src",
                            "../feature/setting/dng/src",
                            "../feature/setting/selftimer/src",
                            "../feature/setting/facedetection/src",
                            "../feature/setting/matrixdisplay/src",
                            "../feature/setting/picturesize/src",
                            "../feature/setting/scenemode/src",
                            "../feature/setting/whitebalance/src",
                            "../feature/setting/imageproperties/src",
                            "../feature/setting/antiflicker/src",
                            "../feature/setting/focusmode/src",
                            "../feature/setting/microphone/src",
                            "../feature/setting/noisereduction/src",
                            "../feature/setting/eis/src",
                            "../feature/setting/ais/src",
                            "../feature/setting/zsd/src",
                            "../feature/setting/volumecapture/src",
                            "../feature/setting/mirrorcapture/src",
                            "../feature/setting/touchcapture/src",
                            "../feature/setting/shuttersound/src",
                            "../feature/setting/gridline/src",
                            "../feature/setting/iso/src",
                            "../feature/setting/videoquality/src",
                            "../feature/setting/aaaroidebug/src",
                            "../feature/setting/shutterspeed/src",
                            "../feature/mode/slr/src",
                            "../feature/mode/iko/src",
                            "../feature/mode/panorama/src",
                            "../feature/mode/extriorplug/src",
                            "../feature/setting/focussound/src",
                            "../feature/setting/autoexit/src",
                            "../feature/setting/restoresettings/src",
                            "../feature/setting/aboutcamera/src"]
        }
        androidTest {
            manifest.srcFile "../tests/AndroidManifest.xml"
            res.srcDirs = ["../tests/res"]
            java.srcDirs = ["../tests/src"]
            assets.srcDirs = ["../tests/assets"]
            aidl.srcDirs = ["../tests/src"]
        }
        test {
            java.srcDirs = ["../unittests/src"]
        }
    }

    dexOptions {
    }

    useLibrary 'org.apache.http.legacy'
}


afterEvaluate {
    assembleDebug.dependsOn assembleDebugAndroidTest
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile fileTree(include: ['*.jar'], dir: '/proj/srv_gghpap10/libs_camera/matrixdisplay')
    //compile fileTree(include: ['*.jar'], dir: '/proj/srv_gghpap10/libs_camera/android-support')
    compile project(':common')
    //following can be un-commented in network on-line mode, don't remove this.
    compile 'com.google.code.findbugs:jsr305:3.0.0'
    compile 'com.android.support:recyclerview-v7:24.2.1'
    compile 'com.google.code.gson:gson:2.2.4'
    androidTestCompile 'com.android.support:support-v4:24.2.1'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    androidTestCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
    //androidTestCompile fileTree(include: ['*.jar'], dir: '/proj/srv_gghpap10/libs_camera/hamcrest')
    //androidTestCompile fileTree(include: ['*.jar'], dir: '/proj/srv_gghpap10/libs_camera/mackito')
    //androidTestCompile fileTree(include: ['*.jar'], dir: '/proj/srv_gghpap10/libs_camera/dexmaker')
    //androidTestCompile fileTree(include: ['*.jar'], dir: '/proj/srv_gghpap10/libs_camera/uiautomator')
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.robolectric:robolectric:3.1.2'
    testCompile 'org.robolectric:shadows-support-v4:3.1.2'
    implementation 'com.android.support:appcompat-v7:24.2.1'
}
